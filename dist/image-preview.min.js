var ImgPreview = (function(e) {
  'use strict'
  function t(e) {
    var t = window,
      a = document,
      i = a.documentElement,
      o = a.getElementsByTagName('body')[0],
      n = t.innerWidth || i.clientWidth || o.clientWidth,
      r = t.innerHeight || i.clientHeight || o.clientHeight,
      s = e.width,
      l = e.height,
      d = n / s
    return (
      (d = d * l > r ? r / l : d),
      l < r && s < n && (d = 1),
      {width: s, height: l, scale: d}
    )
  }
  function a(e) {
    a.installed || ((a.installed = !0), e.component('ImgPreview', i))
  }
  !(function() {
    if ('undefined' != typeof document) {
      var e = document.head || document.getElementsByTagName('head')[0],
        t = document.createElement('style'),
        a =
          '.img-preview .dialog-mask { position: fixed; top: 0; right: 0; left: 0; bottom: 0; background-color: rgba(0,0,0,0.65); height: 100%; z-index: 2100; } .img-preview .dialog-box { position: fixed; overflow: hidden; top: 0; right: 0; bottom: 0; left: 0; z-index: 2200; outline: 0; } .img-preview .dialog-img-box { position: relative; top: 50%; left: 50%; border-radius: 4px; background-color: #fff; box-shadow: 0 4px 12px rgba(0,0,0,0.15); } .img-preview .dialog-img-box .dialog-img { width: 100%; } .img-preview .dialog-fade-enter-active, .img-preview .dialog-fade-leave-active { animation: fade-in 100ms linear; } .img-preview .dialog-fade-leave, .img-preview .dialog-fade-leave-to { animation: fade-out 300ms; } @-moz-keyframes fade-in { 0% { opacity: 0; transform: scale(0.6); } 100% { opacity: 1; transform: scale(1); } } @-webkit-keyframes fade-in { 0% { opacity: 0; transform: scale(0.6); } 100% { opacity: 1; transform: scale(1); } } @-o-keyframes fade-in { 0% { opacity: 0; transform: scale(0.6); } 100% { opacity: 1; transform: scale(1); } } @keyframes fade-in { 0% { opacity: 0; transform: scale(0.6); } 100% { opacity: 1; transform: scale(1); } } @-moz-keyframes fade-out { 0% { transform: scale(1); } 100% { opacity: 0; transform: scale(0.6); } } @-webkit-keyframes fade-out { 0% { transform: scale(1); } 100% { opacity: 0; transform: scale(0.6); } } @-o-keyframes fade-out { 0% { transform: scale(1); } 100% { opacity: 0; transform: scale(0.6); } } @keyframes fade-out { 0% { transform: scale(1); } 100% { opacity: 0; transform: scale(0.6); } } '
      ;(t.type = 'text/css'),
        t.styleSheet
          ? (t.styleSheet.cssText = a)
          : t.appendChild(document.createTextNode(a)),
        e.appendChild(t)
    }
  })()
  var i = {
      render: function() {
        var e = this,
          t = e.$createElement,
          a = e._self._c || t
        return a(
          'div',
          {staticClass: 'img-preview'},
          [
            e.url ? a('div', {staticClass: 'dialog-mask'}) : e._e(),
            e._v(' '),
            a('transition', {attrs: {name: 'dialog-fade'}}, [
              e.url
                ? a(
                    'div',
                    {staticClass: 'dialog-box', on: {click: e.handleClose}},
                    [
                      a(
                        'div',
                        {
                          staticClass: 'dialog-img-box',
                          style: {
                            width: e.size.width + 'px',
                            height: e.size.height + 'px',
                            transform:
                              'translate(-50%, -50%) scale(' +
                              e.size.scale +
                              ')'
                          }
                        },
                        [
                          a('img', {
                            staticClass: 'dialog-img',
                            attrs: {src: e.url}
                          })
                        ]
                      )
                    ]
                  )
                : e._e()
            ])
          ],
          1
        )
      },
      staticRenderFns: [],
      name: 'img-preview',
      model: {prop: 'url'},
      props: {url: {type: String, default: ''}},
      watch: {
        url: function(e) {
          var a = this,
            i = new Image()
          ;(i.src = e),
            (i.onload = function() {
              a.size = t(i)
            })
        }
      },
      data: function() {
        return {size: {}}
      },
      methods: {
        handleClose: function() {
          this.$emit('input', '')
        }
      }
    },
    o = {install: a},
    n = null
  return (
    'undefined' != typeof window
      ? (n = window.Vue)
      : 'undefined' != typeof global && (n = global.Vue),
    n && n.use(o),
    (e.install = a),
    (e.default = i),
    e
  )
})({})
